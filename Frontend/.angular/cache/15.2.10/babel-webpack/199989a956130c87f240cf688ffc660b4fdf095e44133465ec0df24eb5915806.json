{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction ListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵelement(2, \"span\", 8);\n    i0.ɵɵtext(3, \" Loading accounts... \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListComponent_tr_21_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n}\nfunction ListComponent_tr_21_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Deactivate\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_tr_21_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n}\nfunction ListComponent_tr_21_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Activate\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1, a2) {\n  return {\n    \"badge\": true,\n    \"bg-success\": a1,\n    \"bg-danger\": a2\n  };\n};\nfunction ListComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\", 9);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\", 10)(11, \"a\", 11);\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_21_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deactivateAccount(account_r2.id));\n    });\n    i0.ɵɵtemplate(14, ListComponent_tr_21_span_14_Template, 1, 0, \"span\", 13);\n    i0.ɵɵtemplate(15, ListComponent_tr_21_span_15_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_21_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.activateAccount(account_r2.id));\n    });\n    i0.ɵɵtemplate(17, ListComponent_tr_21_span_17_Template, 1, 0, \"span\", 13);\n    i0.ɵɵtemplate(18, ListComponent_tr_21_span_18_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const account_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", account_r2.title, \" \", account_r2.firstName, \" \", account_r2.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.role);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c0, account_r2.isActive, !account_r2.isActive));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", account_r2.isActive ? \"Active\" : \"Inactive\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"edit/\", account_r2.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"disabled\", account_r2.isDeactivating);\n    i0.ɵɵproperty(\"disabled\", !account_r2.isActive || account_r2.isDeactivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", account_r2.isDeactivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !account_r2.isDeactivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", account_r2.isActivating);\n    i0.ɵɵproperty(\"disabled\", account_r2.isActive || account_r2.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", account_r2.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !account_r2.isActivating);\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    accountService;\n    accounts = [];\n    constructor(accountService) {\n      this.accountService = accountService;\n    }\n    ngOnInit() {\n      this.loadAccounts();\n    }\n    loadAccounts() {\n      this.accountService.getAll().subscribe(accounts => {\n        this.accounts = accounts.map(account => ({\n          ...account,\n          isDeactivating: false,\n          isActivating: false\n        }));\n      });\n    }\n    deleteAccount(id) {\n      const account = this.accounts.find(x => x.id === id);\n      account.isDeleting = true;\n      this.accountService.delete(id).pipe(first()).subscribe(() => {\n        this.accounts = this.accounts.filter(x => x.id !== id);\n      });\n    }\n    deactivateAccount(id) {\n      const account = this.accounts.find(x => x.id === id);\n      if (account) {\n        account.isDeactivating = true;\n        this.accountService.deactivateAccount(id).pipe(first()).subscribe({\n          next: () => {\n            account.isActive = false;\n            account.isDeactivating = false;\n          },\n          error: error => {\n            console.error('Error deactivating account:', error);\n            account.isDeactivating = false;\n          }\n        });\n      }\n    }\n    activateAccount(id) {\n      const account = this.accounts.find(x => x.id === id);\n      if (account) {\n        account.isActivating = true;\n        this.accountService.activateAccount(id).pipe(first()).subscribe({\n          next: () => {\n            account.isActive = true;\n            account.isActivating = false;\n          },\n          error: error => {\n            console.error('Error activating account:', error);\n            account.isActivating = false;\n          }\n        });\n      }\n    }\n    static ɵfac = function ListComponent_Factory(t) {\n      return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 22,\n      vars: 2,\n      consts: [[\"routerLink\", \"add\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"mb-2\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"25%\"], [2, \"width\", \"20%\"], [2, \"width\", \"15%\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"5\", 1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [3, \"ngClass\"], [2, \"white-space\", \"nowrap\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"mr-1\", 3, \"routerLink\"], [\"aria-label\", \"Deactivate account\", 1, \"btn\", \"btn-sm\", \"btn-warning\", \"mr-1\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [\"aria-label\", \"Activate account\", 1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"spinner-border\", \"spinner-border-sm\"]],\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Accounts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"p\");\n          i0.ɵɵtext(3, \"All accounts from secure (admin only) API endpoint:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"a\", 0);\n          i0.ɵɵtext(5, \"Create Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"table\", 1)(7, \"thead\")(8, \"tr\")(9, \"th\", 2);\n          i0.ɵɵtext(10, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\", 2);\n          i0.ɵɵtext(12, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\", 3);\n          i0.ɵɵtext(14, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\", 4);\n          i0.ɵɵtext(16, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\", 4);\n          i0.ɵɵtext(18, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(19, \"tbody\");\n          i0.ɵɵtemplate(20, ListComponent_tr_20_Template, 4, 0, \"tr\", 5);\n          i0.ɵɵtemplate(21, ListComponent_tr_21_Template, 19, 21, \"tr\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(20);\n          i0.ɵɵproperty(\"ngIf\", !ctx.accounts || ctx.accounts.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return ListComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","i0","ListComponent","accountService","accounts","constructor","ngOnInit","loadAccounts","getAll","subscribe","map","account","isDeactivating","isActivating","deleteAccount","id","find","x","isDeleting","delete","pipe","filter","deactivateAccount","next","isActive","error","console","activateAccount","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\CLARKKYYY\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\admin\\accounts\\list.component.ts","C:\\Users\\CLARKKYYY\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\admin\\accounts\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core'; \r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '@app/_services'; \r\nimport { Account } from '@app/_models';\r\n\r\n@Component({ \r\n  templateUrl: 'list.component.html' \r\n}) \r\n\r\nexport class ListComponent implements OnInit { \r\n  accounts: any[] = [];\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadAccounts();\r\n  }\r\n\r\n  loadAccounts() {\r\n    this.accountService.getAll().subscribe(accounts => {\r\n      this.accounts = accounts.map(account => ({\r\n        ...account,\r\n        isDeactivating: false,\r\n        isActivating: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  deleteAccount(id: string) {\r\n    const account = this.accounts.find(x => x.id === id); \r\n    account.isDeleting = true; \r\n    this.accountService.delete(id)\r\n        .pipe(first())\r\n        .subscribe(() => {\r\n            this.accounts = this.accounts.filter(x => x.id !== id);\r\n        });\r\n  }\r\n\r\n  deactivateAccount(id: number) {\r\n    const account = this.accounts.find(x => x.id === id);\r\n    if (account) {\r\n      account.isDeactivating = true;\r\n      this.accountService.deactivateAccount(id)\r\n        .pipe(first())\r\n        .subscribe({\r\n          next: () => {\r\n            account.isActive = false;\r\n            account.isDeactivating = false;\r\n          },\r\n          error: (error) => {\r\n            console.error('Error deactivating account:', error);\r\n            account.isDeactivating = false;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  activateAccount(id: number) {\r\n    const account = this.accounts.find(x => x.id === id);\r\n    if (account) {\r\n      account.isActivating = true;\r\n      this.accountService.activateAccount(id)\r\n        .pipe(first())\r\n        .subscribe({\r\n          next: () => {\r\n            account.isActive = true;\r\n            account.isActivating = false;\r\n          },\r\n          error: (error) => {\r\n            console.error('Error activating account:', error);\r\n            account.isActivating = false;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<h1>Accounts</h1>\r\n<p>All accounts from secure (admin only) API endpoint:</p>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Create Account</a>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th style=\"width:25%\">Name</th>\r\n      <th style=\"width:25%\">Email</th>\r\n      <th style=\"width:20%\">Role</th>\r\n      <th style=\"width:15%\">Status</th>\r\n      <th style=\"width:15%\">Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <!-- Loading state -->\r\n    <tr *ngIf=\"!accounts || accounts.length === 0\">\r\n      <td colspan=\"5\" class=\"text-center\">\r\n        <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n        Loading accounts...\r\n      </td>\r\n    </tr>\r\n\r\n    <!-- Accounts list -->\r\n    <tr *ngFor=\"let account of accounts\">\r\n      <td>{{ account.title }} {{ account.firstName }} {{ account.lastName }}</td>\r\n      <td>{{ account.email }}</td>\r\n      <td>{{ account.role }}</td>\r\n      <td>\r\n        <span [ngClass]=\"{'badge': true, 'bg-success': account.isActive, 'bg-danger': !account.isActive}\">\r\n          {{ account.isActive ? 'Active' : 'Inactive' }}\r\n        </span>\r\n      </td>\r\n      <td style=\"white-space: nowrap\">\r\n        <a routerLink=\"edit/{{ account.id }}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n\r\n        <!-- Deactivate button -->\r\n        <button \r\n          (click)=\"deactivateAccount(account.id)\" \r\n          class=\"btn btn-sm btn-warning mr-1\" \r\n          [disabled]=\"!account.isActive || account.isDeactivating\"\r\n          [class.disabled]=\"account.isDeactivating\"\r\n          aria-label=\"Deactivate account\">\r\n          <span *ngIf=\"account.isDeactivating\" class=\"spinner-border spinner-border-sm\"></span>\r\n          <span *ngIf=\"!account.isDeactivating\">Deactivate</span>\r\n        </button>\r\n\r\n        <!-- Activate button -->\r\n        <button \r\n          (click)=\"activateAccount(account.id)\" \r\n          class=\"btn btn-sm btn-success\" \r\n          [disabled]=\"account.isActive || account.isActivating\"\r\n          [class.disabled]=\"account.isActivating\"\r\n          aria-label=\"Activate account\">\r\n          <span *ngIf=\"account.isActivating\" class=\"spinner-border spinner-border-sm\"></span>\r\n          <span *ngIf=\"!account.isActivating\">Activate</span>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}