{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction VerifyEmailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verifying... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyEmailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verification failed, you can also verify your account using the \");\n    i0.ɵɵelementStart(2, \"a\", 3);\n    i0.ɵɵtext(3, \"forgot password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" page. \");\n    i0.ɵɵelementEnd();\n  }\n}\nvar EmailStatus = /*#__PURE__*/(() => {\n  (function (EmailStatus) {\n    EmailStatus[EmailStatus[\"Verifying\"] = 0] = \"Verifying\";\n    EmailStatus[EmailStatus[\"Failed\"] = 1] = \"Failed\";\n  })(EmailStatus || (EmailStatus = {}));\n  return EmailStatus;\n})();\nexport let VerifyEmailComponent = /*#__PURE__*/(() => {\n  class VerifyEmailComponent {\n    route;\n    router;\n    accountService;\n    alertService;\n    EmailStatus = EmailStatus;\n    emailStatus = EmailStatus.Verifying;\n    constructor(route, router, accountService, alertService) {\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n    }\n    ngOnInit() {\n      const token = this.route.snapshot.queryParams['token'];\n      // remove token from url to prevent http referer leakage\n      this.router.navigate([], {\n        relativeTo: this.route,\n        replaceUrl: true\n      });\n      this.accountService.verifyEmail(token).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Verification successful, you can now login', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../login'], {\n            relativeTo: this.route\n          });\n        },\n        error: () => {\n          this.emailStatus = EmailStatus.Failed;\n        }\n      });\n    }\n    static ɵfac = function VerifyEmailComponent_Factory(t) {\n      return new (t || VerifyEmailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VerifyEmailComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"card-header\"], [1, \"card-body\"], [4, \"ngIf\"], [\"routerLink\", \"forgot-password\"]],\n      template: function VerifyEmailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\", 0);\n          i0.ɵɵtext(1, \"Verify Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵtemplate(3, VerifyEmailComponent_div_3_Template, 2, 0, \"div\", 2);\n          i0.ɵɵtemplate(4, VerifyEmailComponent_div_4_Template, 5, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Verifying);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Failed);\n        }\n      },\n      dependencies: [i3.NgIf, i1.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return VerifyEmailComponent;\n})();","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;;ICApCC,2BAAkD;IAChDA,8BACF;IAAAA,iBAAM;;;;;IACNA,2BAA+C;IAC7CA,iFAAgE;IAAAA,4BAAgC;IAAAA,+BAAe;IAAAA,iBAAI;IAACA,uBACtH;IAAAA,iBAAM;;;ADDR,IAAKC,WAGJ;EAHD,WAAKA,WAAW;IACZA,uDAAS;IACTA,iDAAM;EACV,CAAC,EAHIA,WAAW,KAAXA,WAAW;EAAA,OAAXA,WAGJ;AAAA;AAGD,WAAaC,oBAAoB;EAA3B,MAAOA,oBAAoB;IAKjBC;IACAC;IACAC;IACAC;IAPZL,WAAW,GAAGA,WAAW;IACzBM,WAAW,GAAGN,WAAW,CAACO,SAAS;IAEnCC,YACYN,KAAqB,EACrBC,MAAc,EACdC,cAA8B,EAC9BC,YAA0B;MAH1B,UAAK,GAALH,KAAK;MACL,WAAM,GAANC,MAAM;MACN,mBAAc,GAAdC,cAAc;MACd,iBAAY,GAAZC,YAAY;IACpB;IAEJI,QAAQ;MACJ,MAAMC,KAAK,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,WAAW,CAAC,OAAO,CAAC;MAEtD;MACA,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,EAAE,EAAE;QAAEC,UAAU,EAAE,IAAI,CAACZ,KAAK;QAAEa,UAAU,EAAE;MAAI,CAAE,CAAC;MAEtE,IAAI,CAACX,cAAc,CAACY,WAAW,CAACN,KAAK,CAAC,CACjCO,IAAI,CAACnB,KAAK,EAAE,CAAC,CACboB,SAAS,CAAC;QACPC,IAAI,EAAE,MAAK;UACP,IAAI,CAACd,YAAY,CAACe,OAAO,CAAC,4CAA4C,EAAE;YAAEC,oBAAoB,EAAE;UAAI,CAAE,CAAC;UACvG,IAAI,CAAClB,MAAM,CAACU,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YAAEC,UAAU,EAAE,IAAI,CAACZ;UAAK,CAAE,CAAC;QAClE,CAAC;QACDoB,KAAK,EAAE,MAAK;UACR,IAAI,CAAChB,WAAW,GAAGN,WAAW,CAACuB,MAAM;QACzC;OACH,CAAC;IACV;;uBA5BStB,oBAAoB;IAAA;;YAApBA,oBAAoB;MAAAuB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCZjC7B,6BAAwB;UAAAA,4BAAY;UAAAA,iBAAK;UACzCA,8BAAuB;UACrBA,qEAEM;UACNA,qEAEM;UACRA,iBAAM;;;UANEA,eAA0C;UAA1CA,mEAA0C;UAG1CA,eAAuC;UAAvCA,gEAAuC;;;;;;;SDOlCE,oBAAoB;AAAA","names":["first","i0","EmailStatus","VerifyEmailComponent","route","router","accountService","alertService","emailStatus","Verifying","constructor","ngOnInit","token","snapshot","queryParams","navigate","relativeTo","replaceUrl","verifyEmail","pipe","subscribe","next","success","keepAfterRouteChange","error","Failed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\account\\verify-email.component.ts","C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\account\\verify-email.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\nenum EmailStatus {\n    Verifying,\n    Failed\n}\n\n@Component({ templateUrl: 'verify-email.component.html' })\nexport class VerifyEmailComponent implements OnInit {\n    EmailStatus = EmailStatus;\n    emailStatus = EmailStatus.Verifying;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        const token = this.route.snapshot.queryParams['token'];\n\n        // remove token from url to prevent http referer leakage\n        this.router.navigate([], { relativeTo: this.route, replaceUrl: true });\n\n        this.accountService.verifyEmail(token)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Verification successful, you can now login', { keepAfterRouteChange: true });\n                    this.router.navigate(['../login'], { relativeTo: this.route });\n                },\n                error: () => {\n                    this.emailStatus = EmailStatus.Failed;\n                }\n            });\n    }\n}","<h3 class=\"card-header\">Verify Email</h3>\r\n<div class=\"card-body\">\r\n  <div *ngIf=\"emailStatus == EmailStatus.Verifying\">\r\n    Verifying...\r\n  </div>\r\n  <div *ngIf=\"emailStatus == EmailStatus.Failed\">\r\n    Verification failed, you can also verify your account using the <a routerLink=\"forgot-password\">forgot password</a> page.\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}