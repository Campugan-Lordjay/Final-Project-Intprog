{"ast":null,"code":"import { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let WorkflowService = /*#__PURE__*/(() => {\n  class WorkflowService {\n    http;\n    constructor(http) {\n      this.http = http;\n    }\n    getAll() {\n      return this.http.get(`${environment.apiUrl}/workflows`);\n    }\n    getById(id) {\n      return this.http.get(`${environment.apiUrl}/workflows/${id}`);\n    }\n    getByEmployeeId(employeeId) {\n      return this.http.get(`${environment.apiUrl}/workflows/employee/${employeeId}`);\n    }\n    create(workflow) {\n      return this.http.post(`${environment.apiUrl}/workflows`, workflow);\n    }\n    update(id, workflow) {\n      return this.http.put(`${environment.apiUrl}/workflows/${id}`, workflow);\n    }\n    updateStatus(id, status) {\n      return this.http.put(`${environment.apiUrl}/workflows/${id}/status`, {\n        status\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${environment.apiUrl}/workflows/${id}`);\n    }\n    static ɵfac = function WorkflowService_Factory(t) {\n      return new (t || WorkflowService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WorkflowService,\n      factory: WorkflowService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return WorkflowService;\n})();","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,2BAA2B;;;AAIvD,WAAaC,eAAe;EAAtB,MAAOA,eAAe;IACJC;IAApBC,YAAoBD,IAAgB;MAAhB,SAAI,GAAJA,IAAI;IAAgB;IAExCE,MAAM;MACF,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,GAAGL,WAAW,CAACM,MAAM,YAAY,CAAC;IACvE;IAEAC,OAAO,CAACC,EAAU;MACd,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAW,GAAGL,WAAW,CAACM,MAAM,cAAcE,EAAE,EAAE,CAAC;IAC3E;IAEAC,eAAe,CAACC,UAAkB;MAC9B,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAa,GAAGL,WAAW,CAACM,MAAM,uBAAuBI,UAAU,EAAE,CAAC;IAC9F;IAEAC,MAAM,CAACC,QAAkB;MACrB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,GAAGb,WAAW,CAACM,MAAM,YAAY,EAAEM,QAAQ,CAAC;IACtE;IAEAE,MAAM,CAACN,EAAU,EAAEI,QAAkB;MACjC,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAC,GAAGf,WAAW,CAACM,MAAM,cAAcE,EAAE,EAAE,EAAEI,QAAQ,CAAC;IAC3E;IAEAI,YAAY,CAACR,EAAU,EAAES,MAAc;MACnC,OAAO,IAAI,CAACf,IAAI,CAACa,GAAG,CAAC,GAAGf,WAAW,CAACM,MAAM,cAAcE,EAAE,SAAS,EAAE;QAAES;MAAM,CAAE,CAAC;IACpF;IAEAC,MAAM,CAACV,EAAU;MACb,OAAO,IAAI,CAACN,IAAI,CAACgB,MAAM,CAAC,GAAGlB,WAAW,CAACM,MAAM,cAAcE,EAAE,EAAE,CAAC;IACpE;;uBA7BSP,eAAe;IAAA;;aAAfA,eAAe;MAAAkB,SAAflB,eAAe;MAAAmB,YADF;IAAM;;SACnBnB,eAAe;AAAA","names":["environment","WorkflowService","http","constructor","getAll","get","apiUrl","getById","id","getByEmployeeId","employeeId","create","workflow","post","update","put","updateStatus","status","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\watss\\Documents\\School\\magsayo\\Final-Project-Intprog\\Frontend\\src\\app\\_services\\workflow.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '@environments/environment';\r\nimport { Workflow } from '@app/_models/workflow';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WorkflowService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Workflow[]>(`${environment.apiUrl}/workflows`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get<Workflow>(`${environment.apiUrl}/workflows/${id}`);\r\n    }\r\n\r\n    getByEmployeeId(employeeId: string) {\r\n        return this.http.get<Workflow[]>(`${environment.apiUrl}/workflows/employee/${employeeId}`);\r\n    }\r\n\r\n    create(workflow: Workflow) {\r\n        return this.http.post(`${environment.apiUrl}/workflows`, workflow);\r\n    }\r\n\r\n    update(id: number, workflow: Workflow) {\r\n        return this.http.put(`${environment.apiUrl}/workflows/${id}`, workflow);\r\n    }\r\n\r\n    updateStatus(id: number, status: string) {\r\n        return this.http.put(`${environment.apiUrl}/workflows/${id}/status`, { status });\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${environment.apiUrl}/workflows/${id}`);\r\n    }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}