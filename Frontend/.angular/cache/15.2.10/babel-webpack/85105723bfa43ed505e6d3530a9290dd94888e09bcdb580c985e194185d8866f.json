{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services/employee.service\";\nimport * as i4 from \"@app/_services/account.service\";\nimport * as i5 from \"@app/_services/department.service\";\nimport * as i6 from \"@angular/common\";\nfunction AddEditComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const acc_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", acc_r8.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(acc_r8.email);\n  }\n}\nfunction AddEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Account is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r9.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r9.name);\n  }\n}\nfunction AddEditComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Hire Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/admin/employees\"];\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    formBuilder;\n    route;\n    router;\n    employeeService;\n    accountService;\n    departmentService;\n    form;\n    id;\n    isAddMode;\n    loading = false;\n    submitted = false;\n    accounts = [];\n    departments = [];\n    constructor(formBuilder, route, router, employeeService, accountService, departmentService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.departmentService = departmentService;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        employeeId: [{\n          value: '',\n          disabled: true\n        }],\n        account: [''],\n        position: [''],\n        department: [''],\n        hireDate: [''],\n        status: ['']\n      });\n      // Only get active accounts\n      this.accountService.getAll().subscribe(accounts => {\n        this.accounts = accounts.filter(acc => acc.isActive);\n      });\n      this.departmentService.getAll().subscribe(departments => this.departments = departments);\n      if (!this.isAddMode) {\n        this.employeeService.getById(this.id).subscribe(employee => {\n          this.form.patchValue({\n            employeeId: employee.employeeId || '',\n            account: employee.account || '',\n            position: employee.position || '',\n            department: employee.department || '',\n            hireDate: employee.hireDate ? employee.hireDate.split('T')[0] : '',\n            status: employee.status || ''\n          });\n        });\n      } else {\n        this.employeeService.getAll().subscribe(employees => {\n          let max = 0;\n          employees.forEach(emp => {\n            const match = emp.employeeId && emp.employeeId.match(/EMP(\\d+)/);\n            if (match) {\n              const num = parseInt(match[1], 10);\n              if (num > max) max = num;\n            }\n          });\n          const nextId = 'EMP' + String(max + 1).padStart(3, '0');\n          this.form.patchValue({\n            employeeId: nextId\n          });\n        });\n      }\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      const formValue = {\n        ...this.form.getRawValue()\n      };\n      // Convert department name to departmentId\n      const selectedDept = this.departments.find(d => d.name === formValue.department);\n      if (selectedDept) {\n        formValue.departmentId = selectedDept.id;\n      }\n      delete formValue.department;\n      // Convert account email to accountId\n      const selectedAcc = this.accounts.find(a => a.email === formValue.account);\n      if (selectedAcc) {\n        formValue.accountId = selectedAcc.id;\n      }\n      delete formValue.account;\n      if (this.isAddMode) {\n        this.createEmployee(formValue);\n      } else {\n        this.updateEmployee(formValue);\n      }\n    }\n    createEmployee(formValue) {\n      this.employeeService.create(formValue).subscribe({\n        next: () => {\n          this.router.navigate(['/admin/employees'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee(formValue) {\n      this.employeeService.update(this.id, formValue).subscribe({\n        next: () => {\n          this.router.navigate(['/admin/employees'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.loading = false;\n        }\n      });\n    }\n    static ɵfac = function AddEditComponent_Factory(t) {\n      return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i4.AccountService), i0.ɵɵdirectiveInject(i5.DepartmentService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 52,\n      vars: 32,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"readonly\", \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"account\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"position\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"department\", 1, \"form-select\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"status\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [1, \"text-end\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"routerLink\"], [1, \"invalid-feedback\"], [3, \"value\"]],\n      template: function AddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Employee ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵtemplate(9, AddEditComponent_div_9_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n          i0.ɵɵtext(12, \"Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 8)(14, \"option\", 9);\n          i0.ɵɵtext(15, \"Select account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, AddEditComponent_option_16_Template, 2, 2, \"option\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, AddEditComponent_div_17_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 5);\n          i0.ɵɵtext(20, \"Position\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 11);\n          i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 5);\n          i0.ɵɵtext(25, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"select\", 12)(27, \"option\", 9);\n          i0.ɵɵtext(28, \"Select department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(29, AddEditComponent_option_29_Template, 2, 2, \"option\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(30, AddEditComponent_div_30_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"div\", 4)(32, \"label\", 5);\n          i0.ɵɵtext(33, \"Hire Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"input\", 13);\n          i0.ɵɵtemplate(35, AddEditComponent_div_35_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 4)(37, \"label\", 5);\n          i0.ɵɵtext(38, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"select\", 14)(40, \"option\", 9);\n          i0.ɵɵtext(41, \"Select status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"option\", 15);\n          i0.ɵɵtext(43, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"option\", 16);\n          i0.ɵɵtext(45, \"Inactive\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(46, AddEditComponent_div_46_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"div\", 17)(48, \"button\", 18);\n          i0.ɵɵtext(49, \"Save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"button\", 19);\n          i0.ɵɵtext(51, \"Cancel\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Employee\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"readonly\", true)(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.employeeId.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.account.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.account.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.position.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.department.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.department.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.hireDate.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.submitted && ctx.f.status.errors));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.status.errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(31, _c1));\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return AddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["i0","AddEditComponent","formBuilder","route","router","employeeService","accountService","departmentService","form","id","isAddMode","loading","submitted","accounts","departments","constructor","ngOnInit","snapshot","params","group","employeeId","value","disabled","account","position","department","hireDate","status","getAll","subscribe","filter","acc","isActive","getById","employee","patchValue","split","employees","max","forEach","emp","match","num","parseInt","nextId","String","padStart","f","controls","onSubmit","invalid","formValue","getRawValue","selectedDept","find","d","name","departmentId","selectedAcc","a","email","accountId","createEmployee","updateEmployee","create","next","navigate","relativeTo","error","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\admin\\employees\\add-edit.component.html","C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\admin\\employees\\add-edit.component.ts"],"sourcesContent":["<div class=\"card\">\r\n    <div class=\"card-header\">{{ id ? 'Edit' : 'Add' }} Employee</div>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Employee ID</label>\r\n                <input type=\"text\" formControlName=\"employeeId\" class=\"form-control\" [readonly]=\"true\" [ngClass]=\"{ 'is-invalid': submitted && f.employeeId.errors }\">\r\n                <div *ngIf=\"submitted && f.employeeId.errors\" class=\"invalid-feedback\">Employee ID is required</div>\r\n            </div>\r\n        <div class=\"mb-3\">\r\n                <label class=\"form-label\">Account</label>\r\n                <select formControlName=\"account\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.account.errors }\">\r\n                    <option value=\"\">Select account</option>\r\n                    <option *ngFor=\"let acc of accounts\" [value]=\"acc.email\">{{ acc.email }}</option>\r\n            </select>\r\n                <div *ngIf=\"submitted && f.account.errors\" class=\"invalid-feedback\">Account is required</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Position</label>\r\n                <input type=\"text\" formControlName=\"position\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.position.errors }\">\r\n                <div *ngIf=\"submitted && f.position.errors\" class=\"invalid-feedback\">Position is required</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Department</label>\r\n                <select formControlName=\"department\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.department.errors }\">\r\n                    <option value=\"\">Select department</option>\r\n                    <option *ngFor=\"let dept of departments\" [value]=\"dept.name\">{{ dept.name }}</option>\r\n            </select>\r\n                <div *ngIf=\"submitted && f.department.errors\" class=\"invalid-feedback\">Department is required</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n                <label class=\"form-label\">Hire Date</label>\r\n                <input type=\"date\" formControlName=\"hireDate\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.hireDate.errors }\">\r\n                <div *ngIf=\"submitted && f.hireDate.errors\" class=\"invalid-feedback\">Hire Date is required</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Status</label>\r\n                <select formControlName=\"status\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\">\r\n                    <option value=\"\">Select status</option>\r\n                    <option value=\"Active\">Active</option>\r\n                    <option value=\"Inactive\">Inactive</option>\r\n            </select>\r\n                <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">Status is required</div>\r\n        </div>\r\n            <div class=\"text-end\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary me-2\">Save</button>\r\n                <button [routerLink]=\"['/admin/employees']\" class=\"btn btn-secondary\">Cancel</button>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmployeeService } from '@app/_services/employee.service';\r\nimport { Employee } from '@app/_models/employee';\r\nimport { AccountService } from '@app/_services/account.service';\r\nimport { Account } from '@app/_models/account';\r\nimport { Department } from '@app/_models/department';\r\nimport { DepartmentService } from '@app/_services/department.service';\r\n\r\n@Component({\r\n    templateUrl: 'add-edit.component.html'\r\n})\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n    accounts: Account[] = [];\r\n    departments: Department[] = [];\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private employeeService: EmployeeService,\r\n        private accountService: AccountService,\r\n        private departmentService: DepartmentService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        this.form = this.formBuilder.group({\r\n            employeeId: [{ value: '', disabled: true }],\r\n            account: [''],\r\n            position: [''],\r\n            department: [''],\r\n            hireDate: [''],\r\n            status: ['']\r\n        });\r\n\r\n        // Only get active accounts\r\n        this.accountService.getAll().subscribe(accounts => {\r\n            this.accounts = accounts.filter(acc => acc.isActive);\r\n        });\r\n        this.departmentService.getAll().subscribe(departments => this.departments = departments);\r\n\r\n        if (!this.isAddMode) {\r\n            this.employeeService.getById(this.id)\r\n                .subscribe(employee => {\r\n                    this.form.patchValue({\r\n                        employeeId: employee.employeeId || '',\r\n                        account: employee.account || '',\r\n                        position: employee.position || '',\r\n                        department: employee.department || '',\r\n                        hireDate: employee.hireDate ? employee.hireDate.split('T')[0] : '',\r\n                        status: employee.status || ''\r\n                    });\r\n                });\r\n        } else {\r\n            this.employeeService.getAll().subscribe(employees => {\r\n                let max = 0;\r\n                employees.forEach(emp => {\r\n                    const match = emp.employeeId && emp.employeeId.match(/EMP(\\d+)/);\r\n                    if (match) {\r\n                        const num = parseInt(match[1], 10);\r\n                        if (num > max) max = num;\r\n                    }\r\n                });\r\n                const nextId = 'EMP' + String(max + 1).padStart(3, '0');\r\n                this.form.patchValue({ employeeId: nextId });\r\n            });\r\n        }\r\n    }\r\n\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n        this.loading = true;\r\n        const formValue = { ...this.form.getRawValue() };\r\n\r\n        // Convert department name to departmentId\r\n        const selectedDept = this.departments.find(d => d.name === formValue.department);\r\n        if (selectedDept) {\r\n            formValue.departmentId = selectedDept.id;\r\n        }\r\n        delete formValue.department;\r\n\r\n        // Convert account email to accountId\r\n        const selectedAcc = this.accounts.find(a => a.email === formValue.account);\r\n        if (selectedAcc) {\r\n            formValue.accountId = selectedAcc.id;\r\n        }\r\n        delete formValue.account;\r\n\r\n        if (this.isAddMode) {\r\n            this.createEmployee(formValue);\r\n        } else {\r\n            this.updateEmployee(formValue);\r\n        }\r\n    }\r\n\r\n    private createEmployee(formValue: any) {\r\n        this.employeeService.create(formValue)\r\n            .subscribe({\r\n                next: () => {\r\n                    this.router.navigate(['/admin/employees'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateEmployee(formValue: any) {\r\n        this.employeeService.update(this.id, formValue)\r\n            .subscribe({\r\n                next: () => {\r\n                    this.router.navigate(['/admin/employees'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}