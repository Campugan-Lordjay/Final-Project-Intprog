{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_18_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction RegisterComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_23_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.firstName.errors.required);\n  }\n}\nfunction RegisterComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_28_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.lastName.errors.required);\n  }\n}\nfunction RegisterComponent_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_33_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_33_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RegisterComponent_div_33_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.email);\n  }\n}\nfunction RegisterComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_39_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RegisterComponent_div_39_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.minlength);\n  }\n}\nfunction RegisterComponent_div_44_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_44_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RegisterComponent_div_44_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RegisterComponent_div_44_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction RegisterComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \"Accept Ts & Cs is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    formBuilder;\n    route;\n    router;\n    accountService;\n    alertService;\n    form;\n    loading = false;\n    submitted = false;\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        title: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', Validators.required, Validators.email],\n        password: ['', Validators.required, Validators.minLength(6)],\n        confirmPassword: ['', Validators.required],\n        acceptTerms: [false, Validators.requiredTrue]\n      }, {\n        validator: MustMatch('password', 'confirmPassword')\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.accountService.register(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Registration successful, please check your email for verification instructions', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../login'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 56,\n      vars: 31,\n      consts: [[1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [\"formControlName\", \"title\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"acceptTerms\", \"id\", \"acceptTerms\", 1, \"form-check-input\", 3, \"ngClass\"], [\"for\", \"acceptTerms\", 1, \"form-check-label\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", \"href\", \"\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\", 0);\n          i0.ɵɵtext(1, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"label\");\n          i0.ɵɵtext(7, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"select\", 5);\n          i0.ɵɵelement(9, \"option\", 6);\n          i0.ɵɵelementStart(10, \"option\", 7);\n          i0.ɵɵtext(11, \"Mr\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"option\", 8);\n          i0.ɵɵtext(13, \"Mrs\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"option\", 9);\n          i0.ɵɵtext(15, \"Miss\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"option\", 10);\n          i0.ɵɵtext(17, \"Ms\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 12)(20, \"label\");\n          i0.ɵɵtext(21, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 13);\n          i0.ɵɵtemplate(23, RegisterComponent_div_23_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 4)(25, \"label\");\n          i0.ɵɵtext(26, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"input\", 14);\n          i0.ɵɵtemplate(28, RegisterComponent_div_28_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"div\", 15)(30, \"label\");\n          i0.ɵɵtext(31, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"input\", 16);\n          i0.ɵɵtemplate(33, RegisterComponent_div_33_Template, 3, 2, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"div\", 3)(35, \"div\", 4)(36, \"label\");\n          i0.ɵɵtext(37, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(38, \"input\", 17);\n          i0.ɵɵtemplate(39, RegisterComponent_div_39_Template, 3, 2, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"div\", 4)(41, \"label\");\n          i0.ɵɵtext(42, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(43, \"input\", 18);\n          i0.ɵɵtemplate(44, RegisterComponent_div_44_Template, 3, 2, \"div\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(45, \"div\", 19);\n          i0.ɵɵelement(46, \"input\", 20);\n          i0.ɵɵelementStart(47, \"label\", 21);\n          i0.ɵɵtext(48, \"Accept Terms & Conditions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(49, RegisterComponent_div_49_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"div\", 15)(51, \"button\", 22);\n          i0.ɵɵtemplate(52, RegisterComponent_span_52_Template, 1, 0, \"span\", 23);\n          i0.ɵɵtext(53, \" Register \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"a\", 24);\n          i0.ɵɵtext(55, \"Cancel\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.title.errors));\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.firstName.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.lastName.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.lastName.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.email.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.password.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.submitted && ctx.f.acceptTerms.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.acceptTerms.errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return RegisterComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","RegisterComponent","formBuilder","route","router","accountService","alertService","form","loading","submitted","constructor","ngOnInit","group","title","required","firstName","lastName","email","password","minLength","confirmPassword","acceptTerms","requiredTrue","validator","f","controls","onSubmit","clear","invalid","register","value","pipe","subscribe","next","success","keepAfterRouteChange","navigate","relativeTo","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\CLARKKYYY\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\account\\register.component.ts","C:\\Users\\CLARKKYYY\\Desktop\\final-project_intprog-main\\frontend\\src\\app\\account\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\nimport { MustMatch } from '@app/_helpers';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', Validators.required, Validators.email],\r\n            password: ['', Validators.required, Validators.minLength(6)],\r\n            confirmPassword: ['', Validators.required],\r\n            acceptTerms: [false, Validators.requiredTrue]\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n    \r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n    \r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n    \r\n        this.loading = true;\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Registration successful, please check your email for verification instructions', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../login'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}    \r\n","<h3 class=\"card-header\">Register</h3>\r\n<div class=\"card-body\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col\">\r\n                <label>Title</label>\r\n                <select formControlName=\"title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\r\n                    <option value=\"\"></option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Mrs\">Mrs</option>\r\n                    <option value=\"Miss\">Miss</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                </select>\r\n                <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-5\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col\">\r\n                <label>Last Name</label>\r\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n            <div class=\"form-group col\">\r\n                <label>Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col\">\r\n                <label>Confirm Password</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                    <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group form-check\">\r\n            <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\" [ngClass]=\"{ 'is-invalid': submitted && f.acceptTerms.errors }\" />\r\n            <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\r\n            <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Register\r\n            </button>\r\n            <a routerLink=\"../login\" href=\"\" class=\"btn btn-link\">Cancel</a>\r\n        </div>\r\n        </form>\r\n        </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}