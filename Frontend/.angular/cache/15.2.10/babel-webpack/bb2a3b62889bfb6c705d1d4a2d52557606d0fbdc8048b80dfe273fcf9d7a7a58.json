{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services/employee.service\";\nimport * as i3 from \"@app/_services/department.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TransferComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction TransferComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.success);\n  }\n}\nfunction TransferComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r5.name);\n  }\n}\nfunction TransferComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Department is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransferComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28)(2, \"span\", 29);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    route;\n    router;\n    employeeService;\n    departmentService;\n    employee;\n    departments = [];\n    departmentId;\n    loading = false;\n    submitted = false;\n    error;\n    success;\n    constructor(route, router, employeeService, departmentService) {\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n    }\n    ngOnInit() {\n      const employeeId = this.route.snapshot.params['id'];\n      if (!employeeId) {\n        this.error = 'Employee ID is required';\n        return;\n      }\n      this.loadEmployee(employeeId);\n      this.loadDepartments();\n    }\n    loadEmployee(id) {\n      this.loading = true;\n      this.employeeService.getById(id).pipe(first()).subscribe({\n        next: employee => {\n          this.employee = employee;\n          // Convert department string to number if it's a valid number\n          const deptId = parseInt(employee.department);\n          this.departmentId = !isNaN(deptId) ? deptId : null;\n          this.loading = false;\n        },\n        error: error => {\n          this.error = error.error?.message || 'Error loading employee data';\n          this.loading = false;\n          console.error('Error loading employee:', error);\n        }\n      });\n    }\n    loadDepartments() {\n      this.departmentService.getAll().pipe(first()).subscribe({\n        next: departments => this.departments = departments,\n        error: error => {\n          this.error = error.error?.message || 'Error loading departments';\n          console.error('Error loading departments:', error);\n        }\n      });\n    }\n    transfer() {\n      this.submitted = true;\n      this.error = null;\n      this.success = null;\n      // Validate department selection\n      if (!this.departmentId) {\n        this.error = 'Please select a department';\n        return;\n      }\n      // Validate employee exists\n      if (!this.employee || !this.employee.employeeId) {\n        this.error = 'Employee data is not available';\n        return;\n      }\n      this.loading = true;\n      console.log('Initiating transfer:', {\n        employeeId: this.employee.employeeId,\n        departmentId: this.departmentId,\n        currentDepartment: this.employee.department\n      });\n      this.employeeService.transfer(this.employee.employeeId, this.departmentId).pipe(first()).subscribe({\n        next: response => {\n          console.log('Transfer response:', response);\n          this.success = response.message || 'Employee transferred successfully';\n          this.loading = false;\n          setTimeout(() => {\n            this.router.navigate(['/admin/employees']);\n          }, 1500);\n        },\n        error: error => {\n          console.error('Transfer error:', error);\n          this.error = error.error?.message || 'Error transferring employee';\n          this.loading = false;\n        }\n      });\n    }\n    cancel() {\n      this.router.navigate(['/admin/employees']);\n    }\n    static ɵfac = function TransferComponent_Factory(t) {\n      return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TransferComponent,\n      selectors: [[\"app-transfer\"]],\n      decls: 35,\n      vars: 15,\n      consts: [[1, \"modal\", \"custom-modal\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\", \"fw-bold\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-info\", \"mb-3\"], [1, \"mb-3\"], [1, \"form-label\", \"fw-semibold\"], [1, \"form-select\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"text-center py-3\", 4, \"ngIf\"], [1, \"modal-footer\"], [1, \"btn\", \"btn-outline-secondary\", 3, \"disabled\", \"click\"], [1, \"fas\", \"fa-times\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"fas\", \"fa-exchange-alt\"], [1, \"modal-backdrop\", \"show\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [3, \"value\"], [1, \"invalid-feedback\"], [1, \"text-center\", \"py-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"]],\n      template: function TransferComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n          i0.ɵɵtext(5, \"Transfer Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function TransferComponent_Template_button_click_6_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtemplate(8, TransferComponent_div_8_Template, 2, 1, \"div\", 7);\n          i0.ɵɵtemplate(9, TransferComponent_div_9_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"strong\");\n          i0.ɵɵtext(12, \"Employee:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(13);\n          i0.ɵɵelement(14, \"br\");\n          i0.ɵɵelementStart(15, \"strong\");\n          i0.ɵɵtext(16, \"Current Department:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 10)(19, \"label\", 11);\n          i0.ɵɵtext(20, \"New Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"select\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function TransferComponent_Template_select_ngModelChange_21_listener($event) {\n            return ctx.departmentId = $event;\n          });\n          i0.ɵɵelementStart(22, \"option\", 13);\n          i0.ɵɵtext(23, \"Select Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, TransferComponent_option_24_Template, 2, 2, \"option\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(25, TransferComponent_div_25_Template, 2, 0, \"div\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(26, TransferComponent_div_26_Template, 4, 0, \"div\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 17)(28, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function TransferComponent_Template_button_click_28_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵelement(29, \"i\", 19);\n          i0.ɵɵtext(30, \" Cancel \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function TransferComponent_Template_button_click_31_listener() {\n            return ctx.transfer();\n          });\n          i0.ɵɵelement(32, \"i\", 21);\n          i0.ɵɵtext(33, \" Transfer \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(34, \"div\", 22);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate2(\" \", ctx.employee == null ? null : ctx.employee.employeeId, \" - \", ctx.employee == null ? null : ctx.employee.account, \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.employee == null ? null : ctx.employee.department, \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.departmentId)(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && !ctx.departmentId));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngValue\", null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.departmentId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n      styles: [\".modal-backdrop[_ngcontent-%COMP%] {\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      background-color: rgba(0, 0, 0, 0.5);\\n      z-index: 1040;\\n    }\\n    .modal[_ngcontent-%COMP%] {\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      z-index: 1050;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vZW1wbG95ZWVzL3RyYW5zZmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7TUFDRSxlQUFlO01BQ2YsTUFBTTtNQUNOLE9BQU87TUFDUCxXQUFXO01BQ1gsWUFBWTtNQUNaLG9DQUFvQztNQUNwQyxhQUFhO0lBQ2Y7SUFDQTtNQUNFLGVBQWU7TUFDZixNQUFNO01BQ04sT0FBTztNQUNQLFdBQVc7TUFDWCxZQUFZO01BQ1osYUFBYTtNQUNiLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsdUJBQXVCO0lBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgLm1vZGFsLWJhY2tkcm9wIHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICAgIHotaW5kZXg6IDEwNDA7XG4gICAgfVxuICAgIC5tb2RhbCB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB6LWluZGV4OiAxMDUwO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n  return TransferComponent;\n})();","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;;;;ICMtBC,+BAA8C;IAAAA,YAAS;IAAAA,iBAAM;;;;IAAfA,eAAS;IAATA,kCAAS;;;;;IACvDA,+BAAiD;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,oCAAW;;;;;IAYpDA,kCAA2D;IAAAA,YAAa;IAAAA,iBAAS;;;;IAAxCA,kCAAiB;IAACA,eAAa;IAAbA,kCAAa;;;;;IAE5EA,+BAAiE;IAC7DA,wCACJ;IAAAA,iBAAM;;;;;IAGVA,+BAA8C;IAERA,0BAAU;IAAAA,iBAAO;;;;;;;;ADWvE,WAAaC,iBAAiB;EAAxB,MAAOA,iBAAiB;IAUlBC;IACAC;IACAC;IACAC;IAZVC,QAAQ;IACRC,WAAW,GAAU,EAAE;IACvBC,YAAY;IACZC,OAAO,GAAG,KAAK;IACfC,SAAS,GAAG,KAAK;IACjBC,KAAK;IACLC,OAAO;IAEPC,YACUX,KAAqB,EACrBC,MAAc,EACdC,eAAgC,EAChCC,iBAAoC;MAHpC,UAAK,GAALH,KAAK;MACL,WAAM,GAANC,MAAM;MACN,oBAAe,GAAfC,eAAe;MACf,sBAAiB,GAAjBC,iBAAiB;IACvB;IAEJS,QAAQ;MACN,MAAMC,UAAU,GAAG,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;MACnD,IAAI,CAACF,UAAU,EAAE;QACf,IAAI,CAACJ,KAAK,GAAG,yBAAyB;QACtC;;MAEF,IAAI,CAACO,YAAY,CAACH,UAAU,CAAC;MAC7B,IAAI,CAACI,eAAe,EAAE;IACxB;IAEQD,YAAY,CAACE,EAAU;MAC7B,IAAI,CAACX,OAAO,GAAG,IAAI;MACnB,IAAI,CAACL,eAAe,CAACiB,OAAO,CAACD,EAAE,CAAC,CAC7BE,IAAI,CAACvB,KAAK,EAAE,CAAC,CACbwB,SAAS,CAAC;QACTC,IAAI,EAAGlB,QAAQ,IAAI;UACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;UACxB;UACA,MAAMmB,MAAM,GAAGC,QAAQ,CAACpB,QAAQ,CAACqB,UAAU,CAAC;UAC5C,IAAI,CAACnB,YAAY,GAAG,CAACoB,KAAK,CAACH,MAAM,CAAC,GAAGA,MAAM,GAAG,IAAI;UAClD,IAAI,CAAChB,OAAO,GAAG,KAAK;QACtB,CAAC;QACDE,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,EAAEkB,OAAO,IAAI,6BAA6B;UAClE,IAAI,CAACpB,OAAO,GAAG,KAAK;UACpBqB,OAAO,CAACnB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;OACD,CAAC;IACN;IAEQQ,eAAe;MACrB,IAAI,CAACd,iBAAiB,CAAC0B,MAAM,EAAE,CAC5BT,IAAI,CAACvB,KAAK,EAAE,CAAC,CACbwB,SAAS,CAAC;QACTC,IAAI,EAAGjB,WAAW,IAAK,IAAI,CAACA,WAAW,GAAGA,WAAW;QACrDI,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,EAAEkB,OAAO,IAAI,2BAA2B;UAChEC,OAAO,CAACnB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;OACD,CAAC;IACN;IAEAqB,QAAQ;MACN,IAAI,CAACtB,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,KAAK,GAAG,IAAI;MACjB,IAAI,CAACC,OAAO,GAAG,IAAI;MAEnB;MACA,IAAI,CAAC,IAAI,CAACJ,YAAY,EAAE;QACtB,IAAI,CAACG,KAAK,GAAG,4BAA4B;QACzC;;MAGF;MACA,IAAI,CAAC,IAAI,CAACL,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACS,UAAU,EAAE;QAC/C,IAAI,CAACJ,KAAK,GAAG,gCAAgC;QAC7C;;MAGF,IAAI,CAACF,OAAO,GAAG,IAAI;MACnBqB,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAE;QAClClB,UAAU,EAAE,IAAI,CAACT,QAAQ,CAACS,UAAU;QACpCP,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/B0B,iBAAiB,EAAE,IAAI,CAAC5B,QAAQ,CAACqB;OAClC,CAAC;MAEF,IAAI,CAACvB,eAAe,CAAC4B,QAAQ,CAAC,IAAI,CAAC1B,QAAQ,CAACS,UAAU,EAAE,IAAI,CAACP,YAAY,CAAC,CACvEc,IAAI,CAACvB,KAAK,EAAE,CAAC,CACbwB,SAAS,CAAC;QACTC,IAAI,EAAGW,QAA0B,IAAI;UACnCL,OAAO,CAACG,GAAG,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;UAC3C,IAAI,CAACvB,OAAO,GAAGuB,QAAQ,CAACN,OAAO,IAAI,mCAAmC;UACtE,IAAI,CAACpB,OAAO,GAAG,KAAK;UACpB2B,UAAU,CAAC,MAAK;YACd,IAAI,CAACjC,MAAM,CAACkC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;UAC5C,CAAC,EAAE,IAAI,CAAC;QACV,CAAC;QACD1B,KAAK,EAAGA,KAAK,IAAI;UACfmB,OAAO,CAACnB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;UACvC,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,EAAEkB,OAAO,IAAI,6BAA6B;UAClE,IAAI,CAACpB,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;IACN;IAEA6B,MAAM;MACJ,IAAI,CAACnC,MAAM,CAACkC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC5C;;uBAvGWpC,iBAAiB;IAAA;;YAAjBA,iBAAiB;MAAAsC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCzC9B3C,8BAAgC;UAIgBA,iCAAiB;UAAAA,iBAAK;UACtDA,iCAA8E;UAAnBA;YAAA,OAAS4C,YAAQ;UAAA,EAAC;UAAC5C,iBAAS;UAE3FA,8BAAwB;UACpBA,kEAA6D;UAC7DA,kEAAkE;UAElEA,+BAAmC;UACvBA,0BAAS;UAAAA,iBAAS;UAACA,aAC3B;UAAAA,sBAAI;UACJA,+BAAQ;UAAAA,oCAAmB;UAAAA,iBAAS;UAACA,aACzC;UAAAA,iBAAM;UAENA,gCAAkB;UACwBA,+BAAc;UAAAA,iBAAQ;UAC5DA,mCAAgH;UAApFA;YAAA;UAAA,EAA0B;UAClDA,mCAAyB;UAAAA,kCAAiB;UAAAA,iBAAS;UACnDA,2EAAiF;UACrFA,iBAAS;UACTA,qEAEM;UACVA,iBAAM;UAENA,qEAIM;UACVA,iBAAM;UACNA,gCAA0B;UACoBA;YAAA,OAAS4C,YAAQ;UAAA,EAAC;UACxD5C,yBAA4B;UAACA,yBACjC;UAAAA,iBAAS;UACTA,mCAA0E;UAA1CA;YAAA,OAAS4C,cAAU;UAAA,EAAC;UAChD5C,yBAAmC;UAACA,2BACxC;UAAAA,iBAAS;UAKzBA,2BAAuC;;;UArCjBA,eAAW;UAAXA,gCAAW;UACXA,eAAa;UAAbA,kCAAa;UAGYA,eAC3B;UAD2BA,iJAC3B;UACqCA,eACzC;UADyCA,sFACzC;UAIgCA,eAA0B;UAA1BA,0CAA0B;UAC1CA,eAAgB;UAAhBA,8BAAgB;UACCA,eAAc;UAAdA,yCAAc;UAErCA,eAAgC;UAAhCA,yDAAgC;UAKpCA,eAAa;UAAbA,kCAAa;UAO0CA,eAAoB;UAApBA,sCAAoB;UAG5BA,eAAoB;UAApBA,sCAAoB;;;;;;;SDG5EC,iBAAiB;AAAA","names":["first","i0","TransferComponent","route","router","employeeService","departmentService","employee","departments","departmentId","loading","submitted","error","success","constructor","ngOnInit","employeeId","snapshot","params","loadEmployee","loadDepartments","id","getById","pipe","subscribe","next","deptId","parseInt","department","isNaN","message","console","getAll","transfer","log","currentDepartment","response","setTimeout","navigate","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\Final-Project-Intprog\\frontend\\src\\app\\admin\\employees\\transfer.component.ts","C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\Final-Project-Intprog\\frontend\\src\\app\\admin\\employees\\transfer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { EmployeeService } from '@app/_services/employee.service';\r\nimport { DepartmentService } from '@app/_services/department.service';\r\nimport { Employee } from '@app/_models/employee';\r\n\r\ninterface TransferResponse {\r\n    message: string;\r\n    id: string;\r\n    employeeId: string;\r\n    department: string;\r\n    account: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-transfer',\r\n  templateUrl: './transfer.component.html',\r\n  styles: [`\r\n    .modal-backdrop {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      z-index: 1040;\r\n    }\r\n    .modal {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      z-index: 1050;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  `]\r\n})\r\nexport class TransferComponent implements OnInit {\r\n  employee: Employee;\r\n  departments: any[] = [];\r\n  departmentId: number;\r\n  loading = false;\r\n  submitted = false;\r\n  error: string;\r\n  success: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private employeeService: EmployeeService,\r\n    private departmentService: DepartmentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const employeeId = this.route.snapshot.params['id'];\r\n    if (!employeeId) {\r\n      this.error = 'Employee ID is required';\r\n      return;\r\n    }\r\n    this.loadEmployee(employeeId);\r\n    this.loadDepartments();\r\n  }\r\n\r\n  private loadEmployee(id: string) {\r\n    this.loading = true;\r\n    this.employeeService.getById(id)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (employee) => {\r\n          this.employee = employee;\r\n          // Convert department string to number if it's a valid number\r\n          const deptId = parseInt(employee.department);\r\n          this.departmentId = !isNaN(deptId) ? deptId : null;\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          this.error = error.error?.message || 'Error loading employee data';\r\n          this.loading = false;\r\n          console.error('Error loading employee:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  private loadDepartments() {\r\n    this.departmentService.getAll()\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (departments) => this.departments = departments,\r\n        error: (error) => {\r\n          this.error = error.error?.message || 'Error loading departments';\r\n          console.error('Error loading departments:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  transfer() {\r\n    this.submitted = true;\r\n    this.error = null;\r\n    this.success = null;\r\n\r\n    // Validate department selection\r\n    if (!this.departmentId) {\r\n      this.error = 'Please select a department';\r\n      return;\r\n    }\r\n\r\n    // Validate employee exists\r\n    if (!this.employee || !this.employee.employeeId) {\r\n      this.error = 'Employee data is not available';\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    console.log('Initiating transfer:', { \r\n      employeeId: this.employee.employeeId, \r\n      departmentId: this.departmentId,\r\n      currentDepartment: this.employee.department \r\n    });\r\n\r\n    this.employeeService.transfer(this.employee.employeeId, this.departmentId)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (response: TransferResponse) => {\r\n          console.log('Transfer response:', response);\r\n          this.success = response.message || 'Employee transferred successfully';\r\n          this.loading = false;\r\n          setTimeout(() => {\r\n            this.router.navigate(['/admin/employees']);\r\n          }, 1500);\r\n        },\r\n        error: (error) => {\r\n          console.error('Transfer error:', error);\r\n          this.error = error.error?.message || 'Error transferring employee';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/admin/employees']);\r\n  }\r\n} ","<div class=\"modal custom-modal\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title fw-bold\">Transfer Employee</h5>\r\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"cancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n                <div *ngIf=\"success\" class=\"alert alert-success\">{{success}}</div>\r\n\r\n                <div class=\"alert alert-info mb-3\">\r\n                    <strong>Employee:</strong> {{employee?.employeeId}} - {{employee?.account}}\r\n                    <br>\r\n                    <strong>Current Department:</strong> {{employee?.department}}\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label fw-semibold\">New Department</label>\r\n                    <select class=\"form-select\" [(ngModel)]=\"departmentId\" [ngClass]=\"{ 'is-invalid': submitted && !departmentId }\">\r\n                        <option [ngValue]=\"null\">Select Department</option>\r\n                        <option *ngFor=\"let dept of departments\" [value]=\"dept.id\">{{dept.name}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && !departmentId\" class=\"invalid-feedback\">\r\n                        Department is required\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"loading\" class=\"text-center py-3\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button class=\"btn btn-outline-secondary\" (click)=\"cancel()\" [disabled]=\"loading\">\r\n                    <i class=\"fas fa-times\"></i> Cancel\r\n                </button>\r\n                <button class=\"btn btn-primary\" (click)=\"transfer()\" [disabled]=\"loading\">\r\n                    <i class=\"fas fa-exchange-alt\"></i> Transfer\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-backdrop show\"></div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}