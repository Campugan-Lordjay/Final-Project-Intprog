{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services/department.service\";\nimport * as i2 from \"../../_services/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_16_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const department_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.edit(department_r1.id));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_16_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const department_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.delete(department_r1.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const department_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(department_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(department_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(department_r1.employeeCount || 0);\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    departmentService;\n    employeeService;\n    router;\n    departments = [];\n    employees = [];\n    constructor(departmentService, employeeService, router) {\n      this.departmentService = departmentService;\n      this.employeeService = employeeService;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.loadDepartments();\n    }\n    loadDepartments() {\n      this.employeeService.getAll().subscribe(employees => {\n        this.employees = employees;\n        this.departmentService.getAll().subscribe(departments => {\n          this.departments = departments.map(dept => ({\n            ...dept,\n            employeeCount: employees.filter(emp => emp.department === dept.name).length\n          }));\n        });\n      });\n    }\n    add() {\n      this.router.navigate(['/admin/departments/add']);\n    }\n    edit(id) {\n      this.router.navigate(['/admin/departments/edit', id]);\n    }\n    delete(id) {\n      if (confirm('Are you sure you want to delete this department?')) {\n        this.departmentService.delete(id).subscribe(() => this.loadDepartments());\n      }\n    }\n    static ɵfac = function ListComponent_Factory(t) {\n      return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DepartmentService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 20,\n      vars: 1,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\", \"p-0\"], [1, \"table\", \"mb-0\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", \"text-end\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"me-1\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \"DEPARTMENTS\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Employee Count\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tbody\");\n          i0.ɵɵtemplate(16, ListComponent_tr_16_Template, 12, 3, \"tr\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"div\", 5)(18, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_18_listener() {\n            return ctx.add();\n          });\n          i0.ɵɵtext(19, \"Add Department\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        }\n      },\n      dependencies: [i4.NgForOf],\n      encapsulation: 2\n    });\n  }\n  return ListComponent;\n})();","map":{"version":3,"mappings":";;;;;;;;IAagBA,0BAA2C;IACnCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAA0B;IAAAA,iBAAK;IACnCA,0BAAI;IAAAA,YAAiC;IAAAA,iBAAK;IAC1CA,0BAAI;IAC4CA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,oBAAI;IAAAA,iBAAS;IACvFA,kCAAsE;IAAhCA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IALrFA,eAAmB;IAAnBA,wCAAmB;IACnBA,eAA0B;IAA1BA,+CAA0B;IAC1BA,eAAiC;IAAjCA,sDAAiC;;;ACNzD,WAAaC,aAAa;EAApB,MAAOA,aAAa;IAKVC;IACAC;IACAC;IANZC,WAAW,GAAgD,EAAE;IAC7DC,SAAS,GAAe,EAAE;IAE1BC,YACYL,iBAAoC,EACpCC,eAAgC,EAChCC,MAAc;MAFd,sBAAiB,GAAjBF,iBAAiB;MACjB,oBAAe,GAAfC,eAAe;MACf,WAAM,GAANC,MAAM;IACd;IAEJI,QAAQ;MACJ,IAAI,CAACC,eAAe,EAAE;IAC1B;IAEAA,eAAe;MACX,IAAI,CAACN,eAAe,CAACO,MAAM,EAAE,CAACC,SAAS,CAACL,SAAS,IAAG;QAChD,IAAI,CAACA,SAAS,GAAGA,SAAS;QAC1B,IAAI,CAACJ,iBAAiB,CAACQ,MAAM,EAAE,CAACC,SAAS,CAACN,WAAW,IAAG;UACpD,IAAI,CAACA,WAAW,GAAGA,WAAW,CAACO,GAAG,CAACC,IAAI,KAAK;YACxC,GAAGA,IAAI;YACPC,aAAa,EAAER,SAAS,CAACS,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,KAAKJ,IAAI,CAACK,IAAI,CAAC,CAACC;WACxE,CAAC,CAAC;QACP,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IAEAC,GAAG;MACC,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC;IACpD;IAEAC,IAAI,CAACC,EAAU;MACX,IAAI,CAACnB,MAAM,CAACiB,QAAQ,CAAC,CAAC,yBAAyB,EAAEE,EAAE,CAAC,CAAC;IACzD;IAEAC,MAAM,CAACD,EAAU;MACb,IAAIE,OAAO,CAAC,kDAAkD,CAAC,EAAE;QAC7D,IAAI,CAACvB,iBAAiB,CAACsB,MAAM,CAACD,EAAE,CAAC,CAACZ,SAAS,CAAC,MAAM,IAAI,CAACF,eAAe,EAAE,CAAC;;IAEjF;;uBAtCSR,aAAa;IAAA;;YAAbA,aAAa;MAAAyB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDV1B9B,8BAAkB;UACWA,2BAAW;UAAAA,iBAAM;UAC1CA,8BAA2B;UAIPA,oBAAI;UAAAA,iBAAK;UACbA,0BAAI;UAAAA,4BAAW;UAAAA,iBAAK;UACpBA,2BAAI;UAAAA,+BAAc;UAAAA,iBAAK;UACvBA,2BAAI;UAAAA,wBAAO;UAAAA,iBAAK;UAGxBA,8BAAO;UACHA,+DAQK;UACTA,iBAAQ;UAGhBA,+BAAkC;UACEA;YAAA,OAAS+B,SAAK;UAAA,EAAC;UAAC/B,+BAAc;UAAAA,iBAAS;;;UAbpCA,gBAAc;UAAdA,yCAAc;;;;;;;SCH5CC,aAAa;AAAA","names":["i0","ListComponent","departmentService","employeeService","router","departments","employees","constructor","ngOnInit","loadDepartments","getAll","subscribe","map","dept","employeeCount","filter","emp","department","name","length","add","navigate","edit","id","delete","confirm","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\Final-Project-Intprog\\Frontend\\src\\app\\admin\\departments\\list.component.html","C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\Final-Project-Intprog\\Frontend\\src\\app\\admin\\departments\\list.component.ts"],"sourcesContent":["<div class=\"card\">\r\n    <div class=\"card-header\">DEPARTMENTS</div>\r\n    <div class=\"card-body p-0\">\r\n        <table class=\"table mb-0\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <th>Employee Count</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let department of departments\">\r\n                    <td>{{department.name}}</td>\r\n                    <td>{{department.description}}</td>\r\n                    <td>{{department.employeeCount || 0}}</td>\r\n                    <td>\r\n                        <button class=\"btn btn-primary btn-sm me-1\" (click)=\"edit(department.id)\">Edit</button>\r\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"delete(department.id)\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"card-footer text-end\">\r\n        <button class=\"btn btn-primary\" (click)=\"add()\">Add Department</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DepartmentService } from '../../_services/department.service';\r\nimport { Department } from '../../_models/department';\r\nimport { EmployeeService } from '../../_services/employee.service';\r\nimport { Employee } from '../../_models/employee';\r\n\r\n@Component({\r\n    templateUrl: 'list.component.html'\r\n})\r\nexport class ListComponent implements OnInit {\r\n    departments: (Department & { employeeCount?: number })[] = [];\r\n    employees: Employee[] = [];\r\n\r\n    constructor(\r\n        private departmentService: DepartmentService,\r\n        private employeeService: EmployeeService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loadDepartments();\r\n    }\r\n\r\n    loadDepartments() {\r\n        this.employeeService.getAll().subscribe(employees => {\r\n            this.employees = employees;\r\n            this.departmentService.getAll().subscribe(departments => {\r\n                this.departments = departments.map(dept => ({\r\n                    ...dept,\r\n                    employeeCount: employees.filter(emp => emp.department === dept.name).length\r\n                }));\r\n            });\r\n        });\r\n    }\r\n\r\n    add() {\r\n        this.router.navigate(['/admin/departments/add']);\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.router.navigate(['/admin/departments/edit', id]);\r\n    }\r\n\r\n    delete(id: string) {\r\n        if (confirm('Are you sure you want to delete this department?')) {\r\n            this.departmentService.delete(id).subscribe(() => this.loadDepartments());\r\n        }\r\n    }\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}