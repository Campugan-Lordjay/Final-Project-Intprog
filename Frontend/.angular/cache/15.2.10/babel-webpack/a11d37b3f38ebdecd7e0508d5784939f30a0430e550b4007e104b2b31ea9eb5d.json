{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services/workflow.service\";\nimport * as i2 from \"@app/_services/alert.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ListComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Employee ID: \", ctx_r0.employeeId, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"add\"];\n};\nfunction ListComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"button\", 13);\n    i0.ɵɵtext(2, \"Add Workflow\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nfunction ListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 14);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c1 = function (a0, a1, a2) {\n  return {\n    \"bg-warning text-dark\": a0,\n    \"bg-success text-light\": a1,\n    \"bg-danger text-light\": a2\n  };\n};\nconst _c2 = function (a0, a1, a2) {\n  return {\n    \"fa-hourglass-half\": a0,\n    \"fa-check-circle\": a1,\n    \"fa-times-circle\": a2\n  };\n};\nfunction ListComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 15);\n    i0.ɵɵelement(7, \"i\", 16);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"titlecase\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"select\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function ListComponent_tr_21_Template_select_ngModelChange_11_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const workflow_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onStatusChange(workflow_r5, $event));\n    });\n    i0.ɵɵelementStart(12, \"option\", 18);\n    i0.ɵɵtext(13, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 19);\n    i0.ɵɵtext(15, \"Approved\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 20);\n    i0.ɵɵtext(17, \"Rejected\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const workflow_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r5.employeeId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r5.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(8, _c1, workflow_r5.status === \"pending\", workflow_r5.status === \"approved\", workflow_r5.status === \"rejected\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(12, _c2, workflow_r5.status === \"pending\", workflow_r5.status === \"approved\", workflow_r5.status === \"rejected\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 6, workflow_r5.status), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", workflow_r5.status);\n  }\n}\nfunction ListComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 14);\n    i0.ɵɵtext(2, \"No workflows found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c3 = function () {\n  return [\"/admin/employees\"];\n};\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    workflowService;\n    alertService;\n    route;\n    workflows = [];\n    loading = false;\n    employeeId = null;\n    selectedStatus = '';\n    selectedType = '';\n    constructor(workflowService, alertService, route) {\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.route = route;\n    }\n    ngOnInit() {\n      console.log('Initializing workflow list component');\n      // Get employeeId from query params\n      this.route.queryParams.subscribe(params => {\n        console.log('Query params:', params);\n        this.employeeId = params['employeeId'];\n        console.log('Employee ID:', this.employeeId);\n        if (this.employeeId) {\n          this.loadEmployeeWorkflows();\n        } else {\n          this.loadWorkflows();\n        }\n      });\n    }\n    loadWorkflows() {\n      console.log('Loading all workflows');\n      this.loading = true;\n      this.workflowService.getAll().pipe(first()).subscribe({\n        next: workflows => {\n          console.log('Workflows loaded:', workflows);\n          this.workflows = workflows;\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading workflows:', error);\n          this.alertService.error('Error loading workflows: ' + error.message);\n          this.loading = false;\n        }\n      });\n    }\n    loadEmployeeWorkflows() {\n      if (!this.employeeId) {\n        console.error('Employee ID is missing');\n        this.alertService.error('Employee ID is required');\n        return;\n      }\n      console.log('Loading workflows for employee:', this.employeeId);\n      this.loading = true;\n      this.workflowService.getByEmployeeId(this.employeeId).pipe(first()).subscribe({\n        next: workflows => {\n          console.log('Employee workflows loaded:', workflows);\n          this.workflows = workflows;\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading employee workflows:', error);\n          this.alertService.error('Error loading employee workflows: ' + error.message);\n          this.loading = false;\n        }\n      });\n    }\n    filterWorkflows() {\n      if (this.employeeId) {\n        this.loadEmployeeWorkflows();\n      } else {\n        this.loadWorkflows();\n      }\n    }\n    updateStatus(id, status) {\n      console.log('Updating workflow status:', {\n        id,\n        status\n      });\n      this.workflowService.updateStatus(id, status).pipe(first()).subscribe({\n        next: () => {\n          console.log('Workflow status updated successfully');\n          this.alertService.success('Workflow status updated successfully');\n          if (this.employeeId) {\n            this.loadEmployeeWorkflows();\n          } else {\n            this.loadWorkflows();\n          }\n        },\n        error: error => {\n          console.error('Error updating workflow status:', error);\n          this.alertService.error('Error updating workflow status: ' + error.message);\n        }\n      });\n    }\n    onStatusChange(workflow, newStatus) {\n      if (workflow.status === newStatus) return;\n      this.updateStatus(workflow.id, newStatus);\n    }\n    static ɵfac = function ListComponent_Factory(t) {\n      return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 26,\n      vars: 8,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"mb-4\"], [1, \"col\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"col text-end\", 4, \"ngIf\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-end\", \"mt-4\"], [1, \"btn\", \"btn-secondary\", 3, \"routerLink\"], [1, \"text-muted\"], [1, \"col\", \"text-end\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"colspan\", \"6\", 1, \"text-center\"], [1, \"badge\", \"px-2\", \"py-1\", \"rounded-pill\", \"fw-semibold\", 3, \"ngClass\"], [1, \"fas\", \"me-1\", 3, \"ngClass\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"pending\"], [\"value\", \"approved\"], [\"value\", \"rejected\"]],\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, ListComponent_div_5_Template, 2, 1, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, ListComponent_div_6_Template, 3, 2, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"table\", 6)(9, \"thead\")(10, \"tr\")(11, \"th\");\n          i0.ɵɵtext(12, \"Employee ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\");\n          i0.ɵɵtext(16, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\");\n          i0.ɵɵtext(18, \"Action\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(19, \"tbody\");\n          i0.ɵɵtemplate(20, ListComponent_tr_20_Template, 3, 0, \"tr\", 7);\n          i0.ɵɵtemplate(21, ListComponent_tr_21_Template, 18, 16, \"tr\", 8);\n          i0.ɵɵtemplate(22, ListComponent_tr_22_Template, 3, 0, \"tr\", 7);\n          i0.ɵɵelementStart(23, \"div\", 9)(24, \"button\", 10);\n          i0.ɵɵtext(25, \"Back to Employees\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.employeeId ? \"Employee Workflows\" : \"Workflows\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.employeeId);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.workflows);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.workflows.length === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c3));\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, i3.RouterLink, i4.TitleCasePipe],\n      styles: [\".progress[_ngcontent-%COMP%] {\\r\\n    height: 20px;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.progress-bar[_ngcontent-%COMP%] {\\r\\n    line-height: 20px;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.badge[_ngcontent-%COMP%] {\\r\\n    font-size: 12px;\\r\\n    padding: 5px 10px;\\r\\n}\\r\\n\\r\\n.btn-group[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    gap: 5px;\\r\\n}\\r\\n\\r\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n    vertical-align: middle;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vd29ya2Zsb3dzL2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsUUFBUTtBQUNaOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2dyZXNzIHtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5wcm9ncmVzcy1iYXIge1xyXG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi5iYWRnZSB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxufVxyXG5cclxuLmJ0bi1ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZ2FwOiA1cHg7XHJcbn1cclxuXHJcbi50YWJsZSB0ZCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59ICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n  return ListComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","i0","ListComponent","workflowService","alertService","route","workflows","loading","employeeId","selectedStatus","selectedType","constructor","ngOnInit","console","log","queryParams","subscribe","params","loadEmployeeWorkflows","loadWorkflows","getAll","pipe","next","error","message","getByEmployeeId","filterWorkflows","updateStatus","id","status","success","onStatusChange","workflow","newStatus","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\Final-Project-Intprog\\frontend\\src\\app\\admin\\workflows\\list.component.ts","C:\\Users\\Jay Villafuerte\\OneDrive\\Desktop\\Final-Project-Intprog\\frontend\\src\\app\\admin\\workflows\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { Workflow } from '@app/_models/workflow';\r\nimport { WorkflowService } from '@app/_services/workflow.service';\r\nimport { AlertService } from '@app/_services/alert.service';\r\n\r\n@Component({\r\n    templateUrl: 'list.component.html',\r\n    styleUrls: ['./list.component.css']\r\n})\r\nexport class ListComponent implements OnInit {\r\n    workflows: Workflow[] = [];\r\n    loading = false;\r\n    employeeId: string = null;\r\n    selectedStatus: string = '';\r\n    selectedType: string = '';\r\n\r\n    constructor(\r\n        private workflowService: WorkflowService,\r\n        private alertService: AlertService,\r\n        private route: ActivatedRoute\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        console.log('Initializing workflow list component');\r\n        // Get employeeId from query params\r\n        this.route.queryParams.subscribe(params => {\r\n            console.log('Query params:', params);\r\n            this.employeeId = params['employeeId'];\r\n            console.log('Employee ID:', this.employeeId);\r\n            if (this.employeeId) {\r\n                this.loadEmployeeWorkflows();\r\n            } else {\r\n                this.loadWorkflows();\r\n            }\r\n        });\r\n    }\r\n\r\n    loadWorkflows() {\r\n        console.log('Loading all workflows');\r\n        this.loading = true;\r\n        this.workflowService.getAll()\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: workflows => {\r\n                    console.log('Workflows loaded:', workflows);\r\n                    this.workflows = workflows;\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    console.error('Error loading workflows:', error);\r\n                    this.alertService.error('Error loading workflows: ' + error.message);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    loadEmployeeWorkflows() {\r\n        if (!this.employeeId) {\r\n            console.error('Employee ID is missing');\r\n            this.alertService.error('Employee ID is required');\r\n            return;\r\n        }\r\n\r\n        console.log('Loading workflows for employee:', this.employeeId);\r\n        this.loading = true;\r\n        this.workflowService.getByEmployeeId(this.employeeId)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: workflows => {\r\n                    console.log('Employee workflows loaded:', workflows);\r\n                    this.workflows = workflows;\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    console.error('Error loading employee workflows:', error);\r\n                    this.alertService.error('Error loading employee workflows: ' + error.message);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    filterWorkflows() {\r\n        if (this.employeeId) {\r\n            this.loadEmployeeWorkflows();\r\n        } else {\r\n            this.loadWorkflows();\r\n        }\r\n    }\r\n\r\n    updateStatus(id: number, status: string) {\r\n        console.log('Updating workflow status:', { id, status });\r\n        this.workflowService.updateStatus(id, status)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    console.log('Workflow status updated successfully');\r\n                    this.alertService.success('Workflow status updated successfully');\r\n                    if (this.employeeId) {\r\n                        this.loadEmployeeWorkflows();\r\n                    } else {\r\n                        this.loadWorkflows();\r\n                    }\r\n                },\r\n                error: error => {\r\n                    console.error('Error updating workflow status:', error);\r\n                    this.alertService.error('Error updating workflow status: ' + error.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    onStatusChange(workflow: Workflow, newStatus: string) {\r\n        if (workflow.status === newStatus) return;\r\n        this.updateStatus(workflow.id, newStatus);\r\n    }\r\n} ","<div class=\"container mt-4\">\r\n    <div class=\"row mb-4\">\r\n        <div class=\"col\">\r\n            <h2>{{employeeId ? 'Employee Workflows' : 'Workflows'}}</h2>\r\n            <div *ngIf=\"employeeId\" class=\"text-muted\">\r\n                Employee ID: {{employeeId}}\r\n            </div>\r\n        </div>\r\n        <div class=\"col text-end\" *ngIf=\"!employeeId\">\r\n            <button class=\"btn btn-primary\" [routerLink]=\"['add']\">Add Workflow</button>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Employee ID</th>\r\n                    <th>Details</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngIf=\"loading\">\r\n                    <td colspan=\"6\" class=\"text-center\">Loading...</td>\r\n                </tr>\r\n                <tr *ngFor=\"let workflow of workflows\">\r\n                    <td>{{workflow.employeeId}}</td>\r\n                    <td>{{workflow.type}}</td>\r\n                    \r\n                    <td>\r\n                        <span \r\n                          class=\"badge px-2 py-1 rounded-pill fw-semibold\"\r\n                          [ngClass]=\"{\r\n                            'bg-warning text-dark': workflow.status === 'pending',\r\n                            'bg-success text-light': workflow.status === 'approved',\r\n                            'bg-danger text-light': workflow.status === 'rejected'\r\n                          }\">\r\n                          <i class=\"fas me-1\"\r\n                             [ngClass]=\"{\r\n                               'fa-hourglass-half': workflow.status === 'pending',\r\n                               'fa-check-circle': workflow.status === 'approved',\r\n                               'fa-times-circle': workflow.status === 'rejected'\r\n                             }\">\r\n                          </i>\r\n                          {{ workflow.status | titlecase }}\r\n                        </span>\r\n                      </td>\r\n                      \r\n                    \r\n                    <td>\r\n                        <select class=\"form-select\" [ngModel]=\"workflow.status\" (ngModelChange)=\"onStatusChange(workflow, $event)\">\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"approved\">Approved</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"!loading && workflows.length === 0\">\r\n                    <td colspan=\"6\" class=\"text-center\">No workflows found</td>\r\n                </tr>\r\n                <div class=\"text-end mt-4\">\r\n                    <button [routerLink]=\"['/admin/employees']\" class=\"btn btn-secondary\">Back to Employees</button>\r\n            </div>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}